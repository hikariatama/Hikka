#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2022
#           https://t.me/hikariatama
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

import git
from telethon.tl.types import Message
from telethon.utils import get_display_name

from .. import loader, utils, version
from ..inline.types import InlineQuery


@loader.tds
class HikkaInfoMod(loader.Module):
    """Show userbot info"""

    strings = {
        "name": "HikkaInfo",
        "owner": "Owner",
        "version": "Version",
        "build": "Build",
        "prefix": "Prefix",
        "uptime": "Uptime",
        "branch": "Branch",
        "send_info": "Send userbot info",
        "description": "‚Ñπ This will not compromise any sensitive info",
        "up-to-date": (
            "<emoji document_id=5370699111492229743>üòå</emoji><b> Up-to-date</b>"
        ),
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Update required"
            " </b><code>.update</code>"
        ),
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>You need to specify"
            " text to change info to</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Info changed"
            " successfully</b>"
        ),
        "_cfg_cst_msg": (
            "Custom message for info. May contain {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} keywords"
        ),
        "_cfg_cst_btn": "Custom button for info. Leave empty to remove button",
        "_cfg_banner": "URL to image banner",
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji>"
            " <b>Hikka</b>\n\nTelegram userbot with a lot of features, like inline"
            " galleries, forms, lists and animated emojis support. Userbot - software,"
            " running on your Telegram account. If you write a command to any chat, it"
            " will get executed right there. Check out live examples at <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    strings_ru = {
        "owner": "–í–ª–∞–¥–µ–ª–µ—Ü",
        "version": "–í–µ—Ä—Å–∏—è",
        "build": "–°–±–æ—Ä–∫–∞",
        "prefix": "–ü—Ä–µ—Ñ–∏–∫—Å",
        "uptime": "–ê–ø—Ç–∞–π–º",
        "branch": "–í–µ—Ç–∫–∞",
        "send_info": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —é–∑–µ—Ä–±–æ—Ç–µ",
        "description": "‚Ñπ –≠—Ç–æ –Ω–µ —Ä–∞—Å–∫—Ä–æ–µ—Ç –Ω–∏–∫–∞–∫–æ–π –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
        "_ihandle_doc_info": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —é–∑–µ—Ä–±–æ—Ç–µ",
        "up-to-date": (
            "<emoji document_id=5370699111492229743>üòå</emoji><b> –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è</b>"
        ),
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "–ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ info. –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ {me},"
            " {version}, {build}, {prefix}, {platform}, {upd}, {uptime}, {branch}"
        ),
        "_cfg_cst_btn": (
            "–ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ info. –û—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É"
        ),
        "_cfg_banner": "–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–Ω–Ω–µ—Ä-–∫–∞—Ä—Ç–∏–Ω–∫—É",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>–¢–µ–±–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å"
            " —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>–¢–µ–∫—Å—Ç –∏–Ω—Ñ–æ —É—Å–ø–µ—à–Ω–æ"
            " –∏–∑–º–µ–Ω–µ–Ω</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji>"
            " <b>Hikka</b>\n\nTelegram —é–∑–µ—Ä–±–æ—Ç —Å –æ–≥—Ä–æ–º–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–π, –∏–∑"
            " –∫–æ—Ç–æ—Ä—ã—Ö: –∏–Ω–ª–∞–π–Ω –≥–∞–ª–µ—Ä–µ–∏, —Ñ–æ—Ä–º—ã, —Å–ø–∏—Å–∫–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
            " –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–º–æ–¥–∑–∏. –Æ–∑–µ—Ä–±–æ—Ç - –ø—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞"
            " —Ç–≤–æ–µ–º Telegram-–∞–∫–∫–∞—É–Ω—Ç–µ. –ö–æ–≥–¥–∞ —Ç—ã –ø–∏—à–µ—à—å –∫–æ–º–∞–Ω–¥—É –≤ –ª—é–±–æ–º —á–∞—Ç–µ, –æ–Ω–∞"
            " —Å—Ä–∞–∑—É –∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∂–∏–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞ <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    strings_de = {
        "owner": "Besitzer",
        "version": "Version",
        "build": "Build",
        "prefix": "Prefix",
        "uptime": "Uptime",
        "branch": "Branch",
        "send_info": "Botinfo senden",
        "description": "‚Ñπ Dies enth√ºllt keine pers√∂nlichen Informationen",
        "_ihandle_doc_info": "Sende Botinfo",
        "up-to-date": "<emoji document_id=5370699111492229743>üòå</emoji><b> Aktuell</b>",
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Update ben√∂tigt"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "Custom message for info. May contain {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} keywords"
        ),
        "_cfg_cst_btn": "Custom button for info. Leave empty to remove button",
        "_cfg_banner": "URL to image banner",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>Bitte gib einen"
            " Text an, um die Info zu √§ndern</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Info ge√§ndert</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji>"
            " <b>Hikka</b>\n\nTelegram userbot mit vielen Funktionen, wie z.B. Inline"
            " Galerien, Formulare, Listen und Unterst√ºtzung f√ºr animierte Emojis."
            " Userbot - Software, die auf deinem Telegram-Account l√§uft. Wenn du"
            " einen Befehl in irgendeinem Chat schreibst, wird er dort ausgef√ºhrt."
            " Sieh dir Live-Beispiele auf <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    strings_hi = {
        "owner": "‡§Æ‡§æ‡§≤‡§ø‡§ï",
        "version": "‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£",
        "build": "‡§¨‡§ø‡§≤‡•ç‡§°",
        "prefix": "‡§â‡§™‡§∏‡§∞‡•ç‡§ó",
        "uptime": "‡§â‡§™‡§ü‡§æ‡§á‡§Æ",
        "branch": "‡§∂‡§æ‡§ñ‡§æ",
        "send_info": "‡§¨‡•â‡§ü ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡•á‡§ú‡•á‡§Ç",
        "description": "‚Ñπ ‡§Ø‡§π ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§ñ‡•ã‡§≤‡§§‡§æ ‡§π‡•à",
        "_ihandle_doc_info": "‡§¨‡•â‡§ü ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡•á‡§ú‡•á‡§Ç",
        "up-to-date": (
            "<emoji document_id=5370699111492229743>üòå</emoji><b> ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•à</b>"
        ),
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> ‡§Ö‡§™‡§°‡•á‡§ü ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "‡§∏‡•Ç‡§ö‡§®‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§∏‡•ç‡§ü‡§Æ ‡§∏‡§Ç‡§¶‡•á‡§∂‡•§ {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} ‡§ï‡•Ä‡§µ‡§∞‡•ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç"
        ),
        "_cfg_cst_btn": "‡§∏‡•Ç‡§ö‡§®‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§∏‡•ç‡§ü‡§Æ ‡§¨‡§ü‡§®‡•§ ‡§¨‡§ü‡§® ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§æ‡§≤‡•Ä ‡§õ‡•ã‡§°‡§º ‡§¶‡•á‡§Ç",
        "_cfg_banner": "‡§õ‡§µ‡§ø ‡§¨‡•à‡§®‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è URL",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡•á"
            " ‡§≤‡§ø‡§è ‡§ï‡•ã‡§à ‡§™‡§æ‡§† ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¨‡§¶‡§≤ ‡§ó‡§à</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji>"
            " <b>Hikka</b>\n\n‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§Ø‡•Ç‡§ú‡§∞‡§¨‡•â‡§ü ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§á‡§®‡§≤‡§æ‡§á‡§® ‡§ó‡•à‡§≤‡§∞‡•Ä, ‡§´‡•â‡§∞‡•ç‡§Æ, ‡§∏‡•Ç‡§ö‡•Ä ‡§î‡§∞"
            " ‡§è‡§®‡•Ä‡§Æ‡•á‡§ü‡•á‡§° ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§ï‡•Ä ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§®‡•á‡§ï ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç ‡§π‡•à‡§Ç‡•§ ‡§Ø‡•Ç‡§ú‡§∞‡§¨‡•â‡§ü - ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞"
            " ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•á ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü ‡§™‡§∞ ‡§ö‡§≤‡§§‡•Ä ‡§π‡•à‡•§ ‡§ú‡§¨ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§ö‡•à‡§ü ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä ‡§Ü‡§¶‡•á‡§∂"
            " ‡§≤‡§ø‡§ñ‡§§‡•á ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§µ‡§π ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§â‡§∏‡•á ‡§¶‡•á‡§ñ‡§§‡§æ ‡§π‡•à‡•§ ‡§ú‡§æ‡§Å‡§ö ‡§ï‡§∞‡•á‡§Ç <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    strings_uz = {
        "owner": "Egasi",
        "version": "Versiya",
        "build": "Build",
        "prefix": "Prefix",
        "uptime": "Ishlash vaqti",
        "branch": "Vetkasi",
        "send_info": "Bot haqida ma'lumot",
        "description": "‚Ñπ Bu shaxsiy ma'lumot emas",
        "_ihandle_doc_info": "Bot haqida ma'lumot",
        "up-to-date": (
            "<emoji document_id=5370699111492229743>üòå</emoji><b> So'ngi versia</b>"
        ),
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Yangilash"
            " kerak </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "Xabar uchun shaxsiy xabar. {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} kalit so'zlarni ishlatishingiz"
            " mumkin"
        ),
        "_cfg_cst_btn": (
            "Xabar uchun shaxsiy tugma. Tugmani o'chirish uchun bo'sh qoldiring"
        ),
        "_cfg_banner": "URL uchun rasmi",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>Ma'lumotni"
            " o'zgartirish uchun matn kiriting</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Ma'lumotlar"
            " o'zgartirildi</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\nKo'p"
            " funksiyali userbot, buning ichida: ichki-gallereya, formalar, ro'yhatlar,"
            " hamda animatsiyalangan emojilar. Userbot - bu sening"
            " telegram-akkauntingni ichida ishlaydigan ilova. Hohlagan chatga komanda"
            " yozsangiz, tez orada bu komanda ishlaydi. <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a> da misollarni'
            " ko'rishingiz mumkin"
        ),
    }

    strings_tr = {
        "owner": "Sahip",
        "version": "S√ºr√ºm",
        "build": "Derleme",
        "prefix": "√ñnek",
        "uptime": "Aktif S√ºre",
        "branch": "Dal",
        "send_info": "Bot hakkƒ±nda bilgi",
        "description": "‚ÑπÔ∏è Ki≈üisel bilgileri tehlikeye atmaz",
        "_ihandle_doc_info": "Bot hakkƒ±nda bilgi",
        "up-to-date": "<emoji document_id=5370699111492229743>üòå</emoji><b> G√ºncel</b>",
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> G√ºncelleme"
            " gerekli </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "Ki≈üisel mesaj i√ßin bilgi. {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} anahtar kelimeleri kullanƒ±labilir"
        ),
        "_cfg_cst_btn": "Ki≈üisel tu≈ü i√ßin bilgi. Tu≈üu kaldƒ±rmak i√ßin bo≈ü bƒ±rakƒ±n",
        "_cfg_banner": "Resim i√ßin URL",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>Bilgiyi deƒüi≈ütirmek"
            " i√ßin herhangi bir metin girin</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Bilgiler"
            " deƒüi≈ütirildi</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\\√áok fazla"
            " √∂zellik barƒ±ndƒ±ran Telegram kullanƒ±cƒ± botu, √∂rneƒüin √áevrimi√ßi galeri,"
            " formlar, listeler ve animasyonlu emoji desteƒüi gibi. Kullanƒ±cƒ± botu -"
            " Telegram hesabƒ±nƒ±zda √ßalƒ±≈üan bir yazƒ±lƒ±mdƒ±r. Bir sohbete bir komut"
            " yazarsanƒ±z, hemen orada √ßalƒ±≈üacaktƒ±r. √ñrnekleri g√∂rmek i√ßin <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub\'ƒ± ziyaret'
            " edebilirsin</a>"
        ),
    }

    strings_ja = {
        "owner": "„Ç™„Éº„Éä„Éº",
        "version": "„Éê„Éº„Ç∏„Éß„É≥",
        "build": "„Éì„É´„Éâ",
        "prefix": "„Éó„É¨„Éï„Ç£„ÉÉ„ÇØ„Çπ",
        "uptime": "Á®ºÂÉçÊôÇÈñì",
        "branch": "„Éñ„É©„É≥„ÉÅ",
        "send_info": "„Éú„ÉÉ„Éà„Å´„Å§„ÅÑ„Å¶„ÅÆÊÉÖÂ†±",
        "description": "‚ÑπÔ∏è ÂÄã‰∫∫ÊÉÖÂ†±„ÇíÂç±Èô∫„Å´Êôí„Åó„Åæ„Åõ„Çì",
        "_ihandle_doc_info": "„Éú„ÉÉ„Éà„Å´„Å§„ÅÑ„Å¶„ÅÆÊÉÖÂ†±",
        "up-to-date": "<emoji document_id=5370699111492229743>üòå</emoji><b> ÊúÄÊñ∞</b>",
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Êõ¥Êñ∞„ÅåÂøÖË¶Å„Åß„Åô"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "ÂÄã‰∫∫„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆ„Åü„ÇÅ„ÅÆÊÉÖÂ†±„ÄÇ {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} „Ç≠„Éº„ÉØ„Éº„Éâ„Çí‰ΩøÁî®„Åß„Åç„Åæ„Åô"
        ),
        "_cfg_cst_btn": "ÂÄã‰∫∫„Éú„Çø„É≥„ÅÆ„Åü„ÇÅ„ÅÆÊÉÖÂ†±„ÄÇ„Éú„Çø„É≥„ÇíÂâäÈô§„Åô„Çã„Å´„ÅØÁ©∫ÁôΩ„Å´„Åó„Åæ„Åô",
        "_cfg_banner": "ÁîªÂÉè„ÅÆ„Åü„ÇÅ„ÅÆURL",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>ÊÉÖÂ†±„ÇíÂ§âÊõ¥„Åô„Çã„Å´„ÅØ"
            " ‰Ωï„Åã„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖ•Âäõ„Åó„Åæ„Åô</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>ÊÉÖÂ†±„ÅåÂ§âÊõ¥„Åï„Çå„Åæ„Åó„Åü</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\nÂ§öÊ©üËÉΩ„Å™"
            " „É¶„Éº„Ç∂„Éº„Éú„ÉÉ„Éà„Åß„Åô„ÄÇ‰æã„Åà„Å∞„Ç™„É≥„É©„Ç§„É≥„ÇÆ„É£„É©„É™„Éº„ÄÅ„Éï„Ç©„Éº„É†„ÄÅ„É™„Çπ„Éà„ÄÅ"
            " „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥‰ªò„Åç„ÅÆÁµµÊñáÂ≠ó„Å™„Å©„ÄÇ„É¶„Éº„Ç∂„Éº„Éú„ÉÉ„Éà„ÅØ„ÄÅTelegram„Ç¢„Ç´„Ç¶„É≥„ÉàÂÜÖ„Åß"
            " Âãï‰Ωú„Åô„Çã„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇ„ÉÅ„É£„ÉÉ„Éà„Å´„Ç≥„Éû„É≥„Éâ„ÇíÂÖ•Âäõ„Åô„Çã„Å®„ÄÅ„Åô„Åê„Å´"
            " „Åù„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅåÂÆüË°å„Åï„Çå„Åæ„Åô„ÄÇ‰æã„ÇíË¶ã„Çã„Å´„ÅØ„ÄÅ<a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>„ÇíÂèÇÁÖß„Åó„Å¶„Åè„Å†„Åï„ÅÑ'
        ),
    }

    strings_kr = {
        "owner": "ÏÜåÏú†Ïûê",
        "version": "Î≤ÑÏ†Ñ",
        "build": "ÎπåÎìú",
        "prefix": "Ï†ëÎëêÏÇ¨",
        "uptime": "Í∞ÄÎèô ÏãúÍ∞Ñ",
        "branch": "Î∏åÎûúÏπò",
        "send_info": "Î¥áÏóê ÎåÄÌïú Ï†ïÎ≥¥",
        "description": "‚ÑπÔ∏è Í∞úÏù∏ Ï†ïÎ≥¥Î•º ÏúÑÌóòÏóê ÎÖ∏Ï∂úÌïòÏßÄ ÏïäÏäµÎãàÎã§",
        "_ihandle_doc_info": "Î¥áÏóê ÎåÄÌïú Ï†ïÎ≥¥",
        "up-to-date": "<emoji document_id=5370699111492229743>üòå</emoji><b> ÏµúÏã†</b>",
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> ÏóÖÎç∞Ïù¥Ìä∏Í∞Ä ÌïÑÏöîÌï©ÎãàÎã§"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "Í∞úÏù∏ Î©îÏãúÏßÄÎ•º ÏúÑÌïú Ï†ïÎ≥¥. {me}, {version}, {build}, {prefix},"
            " {platform}, {upd}, {uptime}, {branch} ÌÇ§ÏõåÎìúÎ•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§"
        ),
        "_cfg_cst_btn": "Í∞úÏù∏ Î≤ÑÌäºÏùÑ ÏúÑÌïú Ï†ïÎ≥¥. Î≤ÑÌäºÏùÑ Ï†úÍ±∞ÌïòÎ†§Î©¥ ÎπÑÏõå Îë°ÎãàÎã§",
        "_cfg_banner": "Ïù¥ÎØ∏ÏßÄÎ•º ÏúÑÌïú URL",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>Ï†ïÎ≥¥Î•º Î≥ÄÍ≤ΩÌïòÎ†§Î©¥"
            " Ïñ¥Îñ§ ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•ÌïòÏã≠ÏãúÏò§</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Ï†ïÎ≥¥Í∞Ä Î≥ÄÍ≤ΩÎêòÏóàÏäµÎãàÎã§</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\nÎã§ÏñëÌïú Í∏∞Îä•ÏùÑ"
            " Ï†úÍ≥µÌïòÎäî ÏÇ¨Ïö©Ïûê Î¥áÏûÖÎãàÎã§. ÏòàÎ•º Îì§Ïñ¥ Ïò®ÎùºÏù∏ Í∞§Îü¨Î¶¨, ÏñëÏãù, Î™©Î°ù, Ïï†ÎãàÎ©îÏù¥ÏÖò"
            " Emoji Îì±. ÏÇ¨Ïö©Ïûê Î¥áÏùÄ Telegram Í≥ÑÏ†ï ÎÇ¥ÏóêÏÑú ÏûëÎèôÌïòÎäî Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏûÖÎãàÎã§."
            " Ï±ÑÌåÖÏóê Î™ÖÎ†πÏùÑ ÏûÖÎ†•ÌïòÎ©¥ Ï¶âÏãú Ìï¥Îãπ Î™ÖÎ†πÏù¥ Ïã§ÌñâÎê©ÎãàÎã§. ÏòàÎ•º Î≥¥Î†§Î©¥ <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>Î•º Ï∞∏Ï°∞ÌïòÏã≠ÏãúÏò§'
        ),
    }

    strings_ar = {
        "owner": "ÿßŸÑŸÖÿßŸÑŸÉ",
        "version": "ÿßŸÑÿ•ÿµÿØÿßÿ±",
        "build": "ÿ®ŸÜÿßÿ°",
        "prefix": "ÿ®ÿßÿØÿ¶ÿ©",
        "uptime": "ŸàŸÇÿ™ ÿßŸÑÿ™ÿ¥ÿ∫ŸäŸÑ",
        "branch": "ŸÅÿ±ÿπ",
        "send_info": "ÿ•ÿ±ÿ≥ÿßŸÑ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ®Ÿàÿ™",
        "description": "‚ÑπÔ∏è ŸÑÿß ÿ™ÿπÿ±ÿ∂ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ¥ÿÆÿµŸäÿ© ŸÑŸÑÿÆÿ∑ÿ±",
        "_ihandle_doc_info": "ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ®Ÿàÿ™",
        "up-to-date": "<emoji document_id=5370699111492229743>üòå</emoji><b> ŸÖÿ≠ÿØÿ´</b>",
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Ÿäÿ™ÿ∑ŸÑÿ® ÿßŸÑÿ™ÿ≠ÿØŸäÿ´"
            " </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑÿ¥ÿÆÿµŸäÿ©. ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ© {me}, {version},"
            " {build}, {prefix}, {platform}, {upd}, {uptime}, {branch}"
        ),
        "_cfg_cst_btn": "ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ≤ÿ± ÿßŸÑÿ¥ÿÆÿµŸäÿ©. ÿ•ÿ≤ÿßŸÑÿ© ÿßŸÑÿ≤ÿ± Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ±ŸÉŸá ŸÅÿßÿ±ÿ∫Ÿãÿß",
        "_cfg_banner": "URL ŸÑŸÑÿµŸàÿ±ÿ©",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>ŸÑÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ÿå"
            " Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿ®ÿπÿ∂ ÿßŸÑŸÜÿµ</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>ÿ™ŸÖ ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™"
            " ÿ®ŸÜÿ¨ÿßÿ≠</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\nÿ®Ÿàÿ™"
            " ŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸäŸàŸÅÿ± ŸÖŸäÿ≤ÿßÿ™ ŸÖÿ™ÿπÿØÿØÿ©. ÿπŸÑŸâ ÿ≥ÿ®ŸäŸÑ ÿßŸÑŸÖÿ´ÿßŸÑ: ŸÖÿπÿ±ÿ∂ ÿπÿ®ÿ± ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™ÿå ŸÜŸÖŸàÿ∞ÿ¨ÿå"
            " ŸÇÿßÿ¶ŸÖÿ©ÿå Emoji ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑŸÖÿ™ÿ≠ÿ±ŸÉÿ© Ÿàÿ∫Ÿäÿ±Ÿáÿß. ÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸáŸà ÿ™ÿ∑ÿ®ŸäŸÇ ŸäÿπŸÖŸÑ ÿØÿßÿÆŸÑ ÿ≠ÿ≥ÿßÿ®"
            " Telegram. Ÿäÿ™ŸÖ ÿ™ŸÜŸÅŸäÿ∞ ÿ£ŸàÿßŸÖÿ± ÿßŸÑÿØÿ±ÿØÿ¥ÿ© ÿπŸÑŸâ ÿßŸÑŸÅŸàÿ±. ŸÑŸÖÿ≤ŸäÿØ ŸÖŸÜ ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ÿå Ÿäÿ±ÿ¨Ÿâ"
            ' ÿ≤Ÿäÿßÿ±ÿ© <a href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    strings_es = {
        "owner": "Propietario",
        "version": "Versi√≥n",
        "build": "Construir",
        "prefix": "Prefijo",
        "uptime": "Tiempo de actividad",
        "branch": "Rama",
        "send_info": "Enviar informaci√≥n del bot",
        "description": "‚ÑπÔ∏è No exponga su informaci√≥n personal",
        "_ihandle_doc_info": "Informaci√≥n del bot",
        "up-to-date": (
            "<emoji document_id=5370699111492229743>üòå</emoji><b> Actualizado</b>"
        ),
        "update_required": (
            "<emoji document_id=5424728541650494040>üòï</emoji><b> Actualizaci√≥n"
            " necesaria </b><code>.update</code>"
        ),
        "_cfg_cst_msg": (
            "Informaci√≥n del mensaje personalizado. Puede usar las palabras clave {me},"
            " {version}, {build}, {prefix}, {platform}, {upd}, {uptime}, {branch}"
        ),
        "_cfg_cst_btn": (
            "Informaci√≥n del bot√≥n personalizado. Eliminar el bot√≥n deje en blanco"
        ),
        "_cfg_banner": "URL de la imagen",
        "setinfo_no_args": (
            "<emoji document_id=5370881342659631698>üò¢</emoji> <b>Para cambiar la"
            " informaci√≥n, ingrese alg√∫n texto</b>"
        ),
        "setinfo_success": (
            "<emoji document_id=5436040291507247633>üéâ</emoji> <b>Informaci√≥n cambiada"
            " con √©xito</b>"
        ),
        "desc": (
            "<emoji document_id=6318565919471699564>üåå</emoji> <b>Hikka</b>\n\nEl bot de"
            " usuario proporciona varias funciones. Por ejemplo: Galer√≠a en l√≠nea,"
            " formulario, lista, Emoji animado y m√°s. El bot de usuario es una"
            " aplicaci√≥n que funciona dentro de una cuenta de Telegram. Las √≥rdenes de"
            " chat se ejecutan de inmediato. Para obtener m√°s informaci√≥n, consulte <a"
            ' href="https://github.com/hikariatama/Hikka">GitHub</a>'
        ),
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "custom_message",
                doc=lambda: self.strings("_cfg_cst_msg"),
            ),
            loader.ConfigValue(
                "custom_button",
                ["üåò Support chat", "https://t.me/hikka_talks"],
                lambda: self.strings("_cfg_cst_btn"),
                validator=loader.validators.Union(
                    loader.validators.Series(fixed_len=2),
                    loader.validators.NoneType(),
                ),
            ),
            loader.ConfigValue(
                "banner_url",
                "https://github.com/hikariatama/assets/raw/master/hikka_banner.mp4",
                lambda: self.strings("_cfg_banner"),
                validator=loader.validators.Link(),
            ),
        )

    async def client_ready(self):
        self._me = await self._client.get_me()

        # Legacy migration
        if (
            self.config["banner_url"]
            == "https://github.com/hikariatama/assets/raw/master/hikka_banner.png"
        ):
            self.config[
                "banner_url"
            ] = "https://github.com/hikariatama/assets/raw/master/hikka_banner.mp4"

    def _render_info(self, inline: bool) -> str:
        try:
            repo = git.Repo(search_parent_directories=True)
            diff = repo.git.log([f"HEAD..origin/{version.branch}", "--oneline"])
            upd = (
                self.strings("update_required") if diff else self.strings("up-to-date")
            )
        except Exception:
            upd = ""

        me = f'<b><a href="tg://user?id={self._me.id}">{utils.escape_html(get_display_name(self._me))}</a></b>'

        build = utils.get_commit_url()
        _version = f'<i>{".".join(list(map(str, list(version.__version__))))}</i>'
        prefix = f"¬´<code>{utils.escape_html(self.get_prefix())}</code>¬ª"
        platform = utils.get_named_platform()

        return (
            (
                "<b>üåò Hikka</b>\n"
                if "hikka" not in self.config["custom_message"].lower()
                else ""
            )
            + self.config["custom_message"].format(
                me=me,
                version=_version,
                build=build,
                prefix=prefix,
                platform=platform,
                upd=upd,
                uptime=utils.formatted_uptime(),
                branch=version.branch,
            )
            if self.config["custom_message"]
            else (
                "<b>{}</b>\n\n"
                f'<b>{{}} {self.strings("owner")}: </b>{me}\n\n'
                f"<b>{{}} {self.strings('version')}: </b>{_version} {build}\n"
                f"<b>{{}} {self.strings('branch')}: </b><code>{version.branch}</code>\n"
                f"{upd}\n\n"
                f"<b>{{}} {self.strings('prefix')}: </b>{prefix}\n"
                f"<b>{{}} {self.strings('uptime')}: </b>{utils.formatted_uptime()}\n"
                f"<b>{platform}</b>\n"
            ).format(
                *map(
                    lambda x: utils.remove_html(x) if inline else x,
                    (
                        utils.get_platform_emoji()
                        if self._client.hikka_me.premium and not inline
                        else "üåò Hikka",
                        "<emoji document_id=5373141891321699086>üòé</emoji>",
                        "<emoji document_id=5469741319330996757>üí´</emoji>",
                        "<emoji document_id=5449918202718985124>üå≥</emoji>",
                        "<emoji document_id=5472111548572900003>‚å®Ô∏è</emoji>",
                        "<emoji document_id=5451646226975955576>‚åõÔ∏è</emoji>",
                    ),
                )
            )
        )

    def _get_mark(self):
        return (
            {
                "text": self.config["custom_button"][0],
                "url": self.config["custom_button"][1],
            }
            if self.config["custom_button"]
            else None
        )

    @loader.inline_handler(
        thumb_url="https://img.icons8.com/external-others-inmotus-design/344/external-Moon-round-icons-others-inmotus-design-2.png"
    )
    @loader.inline_everyone
    async def info(self, _: InlineQuery) -> dict:
        """Send userbot info"""

        return {
            "title": self.strings("send_info"),
            "description": self.strings("description"),
            **(
                {"photo": self.config["banner_url"], "caption": self._render_info(True)}
                if self.config["banner_url"]
                else {"message": self._render_info(True)}
            ),
            "thumb": (
                "https://github.com/hikariatama/Hikka/raw/master/assets/hikka_pfp.png"
            ),
            "reply_markup": self._get_mark(),
        }

    @loader.unrestricted
    async def infocmd(self, message: Message):
        """Send userbot info"""

        if self.config["custom_button"]:
            await self.inline.form(
                message=message,
                text=self._render_info(True),
                reply_markup=self._get_mark(),
                **(
                    {"photo": self.config["banner_url"]}
                    if self.config["banner_url"]
                    else {}
                ),
            )
        else:
            try:
                await self._client.send_file(
                    message.peer_id,
                    self.config["banner_url"],
                    caption=self._render_info(False),
                )
            except Exception:
                await utils.answer(message, self._render_info(False))
            else:
                if message.out:
                    await message.delete()

    @loader.unrestricted
    @loader.command(
        ru_doc="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–∏–ø—É '–ß—Ç–æ —Ç–∞–∫–æ–µ –•–∏–∫–∫–∞?'",
        de_doc="Sende Informationen √ºber den Bot",
        tr_doc="Bot hakkƒ±nda bilgi g√∂nderir",
        hi_doc="‡§¨‡•â‡§ü ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§≠‡•á‡§ú‡•á‡§Ç",
        uz_doc="Bot haqida ma'lumot yuborish",
        ja_doc="„Éú„ÉÉ„Éà„Å´„Å§„ÅÑ„Å¶„ÅÆÊÉÖÂ†±„ÇíÈÄÅ‰ø°„Åó„Åæ„Åô",
        kr_doc="Î¥áÏóê ÎåÄÌïú Ï†ïÎ≥¥Î•º Î≥¥ÎÉÖÎãàÎã§",
        ar_doc="ÿ•ÿ±ÿ≥ÿßŸÑ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ŸàŸÑ ÿßŸÑÿ®Ÿàÿ™",
        es_doc="Enviar informaci√≥n sobre el bot",
    )
    async def hikkainfocmd(self, message: Message):
        """Send info aka 'What is Hikka?'"""
        await utils.answer(message, self.strings("desc"))

    @loader.command(
        ru_doc="<—Ç–µ–∫—Å—Ç> - –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ .info",
        de_doc="<text> - √Ñndere den Text in .info",
        tr_doc="<metin> - .info'da metni deƒüi≈ütir",
        uz_doc="<matn> - .info'dagi matnni o'zgartirish",
        hi_doc="<‡§™‡§æ‡§†> - .info ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§¨‡§¶‡§≤‡•á‡§Ç",
        ja_doc="<„ÉÜ„Ç≠„Çπ„Éà> - .info„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíÂ§âÊõ¥„Åó„Åæ„Åô",
        kr_doc="<ÌÖçÏä§Ìä∏> - .infoÏùò ÌÖçÏä§Ìä∏Î•º Î≥ÄÍ≤ΩÌï©ÎãàÎã§",
        ar_doc="<ŸÜÿµ> - ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑŸÜÿµ ŸÅŸä .info",
        es_doc="<texto> - Cambiar el texto en .info",
    )
    async def setinfo(self, message: Message):
        """<text> - Change text in .info"""
        args = utils.get_args_html(message)
        if not args:
            return await utils.answer(message, self.strings("setinfo_no_args"))

        self.config["custom_message"] = args
        await utils.answer(message, self.strings("setinfo_success"))
