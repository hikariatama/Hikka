# ¬©Ô∏è Dan Gazizullin, 2021-2022
# This file is a part of Hikka Userbot
# üåê https://github.com/hikariatama/Hikka
# You can redistribute it and/or modify it under the terms of the GNU AGPLv3
# üîë https://www.gnu.org/licenses/agpl-3.0.html

import asyncio
import datetime
import io
import json
import logging
import time

from telethon.tl.types import Message

from .. import loader, utils
from ..inline.types import BotInlineCall

logger = logging.getLogger(__name__)


@loader.tds
class HikkaBackupMod(loader.Module):
    """Automatic database backup"""

    strings = {
        "name": "HikkaBackup",
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> creates database backups periodically. You can"
            " change this behavior later.\n\nPlease, select the periodicity of"
            " automatic database backups"
        ),
        "saved": (
            "‚úÖ Backup period saved. You can re-configure it later with"
            " .set_backup_period"
        ),
        "never": (
            "‚úÖ I will not make automatic backups. You can re-configure it later with"
            " .set_backup_period"
        ),
        "invalid_args": (
            "üö´ <b>Specify correct backup period in hours, or `0` to disable</b>"
        ),
    }

    strings_ru = {
        "period": (
            "‚åöÔ∏è <b>–Æ–Ω–∏—Ç ¬´ALPHA¬ª</b> —Å–æ–∑–¥–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏. –≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
            " –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∂–µ.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ"
            " –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
        ),
        "saved": (
            "‚úÖ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –ï–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å –ø–æ–º–æ—â—å—é .set_backup_period"
        ),
        "never": (
            "‚úÖ –Ø –Ω–µ –±—É–¥—É –¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏. –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å"
            " –∏—Å–ø–æ–ª—å–∑—É—è .set_backup_period"
        ),
        "invalid_args": (
            "üö´ <b>–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤ —á–∞—Å–∞—Ö, –∏–ª–∏ `0` –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è</b>"
        ),
    }

    strings_it = {
        "period": (
            "‚åöÔ∏è <b>Unit√† ¬´ALPHA¬ª</b> crea backup del database periodicamente. Puoi"
            " modificare questo comportamento in seguito.\n\nPer favore, seleziona"
            " la periodicit√† dei backup automatici"
        ),
        "saved": (
            "‚úÖ Periodo di backup salvato. Puoi modificarlo in seguito con"
            " .set_backup_period"
        ),
        "never": (
            "‚úÖ Non far√≤ backup automatici. Puoi modificarlo in seguito con"
            " .set_backup_period"
        ),
        "invalid_args": (
            "üö´ <b>Specifica il periodo di backup corretto in ore, o `0` per"
            " disabilitarlo</b>"
        ),
    }

    strings_de = {
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> erstellt regelm√§√üige Backups. Diese Einstellungen"
            " k√∂nnen sp√§ter ge√§ndert werden.\n\nBitte w√§hlen Sie die Periodizit√§t"
            " des Backups"
        ),
        "saved": (
            "‚úÖ Periodizit√§t gespeichert! Sie k√∂nnen es mit .set_backup_period √§ndern"
        ),
        "never": (
            "‚úÖ Ich werde keine automatischen Backups erstellen. Sie k√∂nnen es mit"
            " .set_backup_period √§ndern"
        ),
        "invalid_args": (
            "üö´ <b>Geben Sie die korrekte Periodizit√§t in Stunden an, oder `0` zum"
            " Deaktivieren</b>"
        ),
    }

    strings_tr = {
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> otomatik olarak yedekler olu≈üturur. Ayarlarƒ±nƒ±"
            " daha sonradan deƒüi≈ütirebilirsiniz.\n\nL√ºtfen otomatik yedekleme"
            " i√ßin periyot se√ßin"
        ),
        "saved": (
            "‚úÖ Yedekleme periyodu kaydedildi! .set_backup_period komutu ile"
            " daha sonradan tekrar deƒüi≈ütirebilirsin"
        ),
        "never": (
            "‚úÖ Otomatik yedekleme yapmayacaƒüƒ±m. .set_backup_period komutu ile"
            " daha sonradan tekrar deƒüi≈ütirebilirsin"
        ),
        "invalid_args": (
            "üö´ <b>Ge√ßerli bir yedekleme periyodunu saat cinsinden belirtin, ya da `0`"
            " ile devre dƒ±≈üƒ± bƒ±rakƒ±n</b>"
        ),
    }

    strings_uz = {
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> avtomatik ravishda e'lon qiladi. Ushbu sozlamalarni"
            " keyinroq o'zgartirishingiz mumkin.\n\nIltimos, avtomatik e'lon qilish"
            " davom ettirish tartibini tanlang"
        ),
        "saved": (
            "‚úÖ E'lon davom ettirish tartibi saqlandi! Uni .set_backup_period orqali"
            " o'zgartirishingiz mumkin"
        ),
        "hech qachon": (
            "‚úÖ Avtomatik zahira nusxasini yaratmayman. Uni .set_backup_period bilan"
            " o'zgartirishingiz mumkin"
        ),
        "invalid_args": (
            'üö´ <b>Yaroqli zaxira muddatini soat yoki "0" bilan belgilang o\'chirish</b>'
        ),
    }

    strings_es = {
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> crea autom√°ticamente copias de seguridad. Puede"
            " cambiar estos ajustes m√°s tarde.\n\nPor favor, seleccione el per√≠odo de"
            " copia de seguridad"
        ),
        "saved": (
            "‚úÖ ¬°Se ha guardado el per√≠odo de copia de seguridad! Puede cambiarlo"
            " con .set_backup_period m√°s tarde"
        ),
        "never": (
            "‚úÖ No crear copias de seguridad autom√°ticamente. Puede cambiarlo"
            " con .set_backup_period m√°s tarde"
        ),
        "invalid_args": (
            "üö´ <b>Por favor, introduzca un per√≠odo de copia de seguridad correcto en"
            " horas, o `0` para desactivarlo</b>"
        ),
    }

    strings_kk = {
        "period": (
            "‚åöÔ∏è <b>Unit ¬´ALPHA¬ª</b> –∞–≤—Ç–æ–º–∞—Ç—Ç—ã —Ä–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä –∂–∞—Å–∞–π–¥—ã. –ë“±–ª"
            " –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ –∫–µ–π—ñ–Ω—ñ—Ä–µ–∫ ”©–∑–≥–µ—Ä—Ç–µ –∞–ª–∞—Å—ã–∑.\n\n”®—Ç—ñ–Ω—ñ—à, —Ä–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä"
            " “õ–∞–π–¥–∞“ì—ã –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ –∂–∞—Å–∞–ª–∞–¥—ã"
        ),
        "saved": (
            "‚úÖ –†–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä “õ–∞–π–¥–∞“ì—ã –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ –∂–∞—Å–∞–ª–∞–¥—ã! –ë“±–ª –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ"
            " .set_backup_period –∫–æ–º–∞–Ω–¥–∞—Å—ã–º–µ–Ω –∫–µ–π—ñ–Ω—ñ—Ä–µ–∫ ”©–∑–≥–µ—Ä—Ç–µ –∞–ª–∞—Å—ã–∑"
        ),
        "never": (
            "‚úÖ –ê–≤—Ç–æ–º–∞—Ç—Ç—ã —Ä–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä –∂–∞—Å–∞—É“ì–∞ –±–æ–ª–º–∞–π–¥—ã. –ë“±–ª –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ"
            " .set_backup_period –∫–æ–º–∞–Ω–¥–∞—Å—ã–º–µ–Ω –∫–µ–π—ñ–Ω—ñ—Ä–µ–∫ ”©–∑–≥–µ—Ä—Ç–µ –∞–ª–∞—Å—ã–∑"
        ),
        "invalid_args": (
            "üö´ <b>–ñ–∞—Ä–∞–º–¥—ã —Ä–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä “õ–∞–π–¥–∞“ì—ã –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ –∂–∞—Å–∞–ª–∞–¥—ã, –Ω–µ–º–µ—Å–µ"
            " ”©—à—ñ—Ä—ñ–ª–µ–¥—ñ</b>"
        ),
    }

    strings_tt = {
        "period": (
            "‚åöÔ∏è <b>¬´ALPHA¬ª –±–µ—Ä”ô–º–ª–µ–≥–µ</b> —Ä–µ–≥—É–ª—è—Ä —Ä–µ–∑–µ—Ä–≤–ª–∞—Ä —Ç—É–¥—ã—Ä–∞."
            " –ë—É –∫”©–π–ª”ô“Ø–ª”ô—Ä–Ω–µ —Å–æ“£—Ä–∞–∫ “Ø–∑–≥”ô—Ä—Ç–µ—Ä–≥”ô –º”©–º–∫–∏–Ω."
            "\n\n–ó–∏–Ω“ª–∞—Ä, —Ä–µ–∑–µ—Ä–≤ –µ—à–ª—ã–∫–Ω—ã —Å–∞–π–ª–∞–≥—ã–∑"
        ),
        "saved": "‚úÖ –í–∞–∫—ã—Ç–ª—ã–ª—ã–∫ —Å–∞–∫–ª–∞–Ω–≥–∞–Ω! –ê–Ω—ã “Ø–∑–≥”ô—Ä—Ç–µ–ø –±—É–ª–∞ .set_backup_period",
        "never": (
            "‚úÖ –ú–∏–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∫ —Ä–µ–∑–µ—Ä–≤ —è—Å–∞–º—ã–π–º. –ê–Ω—ã –∫—É–ª–ª–∞–Ω—ã–ø —é–∫–∫–∞"
            " —á—ã–≥–∞—Ä—ã—Ä–≥–∞ –º”©–º–∫–∏–Ω .set_backup_period"
        ),
        "invalid_args": (
            "üö´ <b>–°”ô–≥–∞—Ç—å–ª”ô—Ä–¥”ô –¥”©—Ä–µ—Å –µ—à–ª—ã–∫–Ω—ã –∫“Ø—Ä—Å”ô—Ç–µ–≥–µ–∑, —è–∫–∏ —Å“Ø–Ω–¥–µ—Ä“Ø ”©—á–µ–Ω 0</b>"
        ),
    }

    async def client_ready(self):
        if not self.get("period"):
            await self.inline.bot.send_photo(
                self.tg_id,
                photo="https://github.com/hikariatama/assets/raw/master/unit_alpha.png",
                caption=self.strings("period"),
                reply_markup=self.inline.generate_markup(
                    utils.chunks(
                        [
                            {
                                "text": f"üï∞ {i} h",
                                "callback": self._set_backup_period,
                                "args": (i,),
                            }
                            for i in [1, 2, 4, 6, 8, 12, 24, 48, 168]
                        ],
                        3,
                    )
                    + [
                        [
                            {
                                "text": "üö´ Never",
                                "callback": self._set_backup_period,
                                "args": (0,),
                            }
                        ]
                    ]
                ),
            )

        self._backup_channel, _ = await utils.asset_channel(
            self._client,
            "hikka-backups",
            "üìº Your database backups will appear here",
            silent=True,
            archive=True,
            avatar="https://github.com/hikariatama/assets/raw/master/hikka-backups.png",
            _folder="hikka",
        )

        self.handler.start()

    async def _set_backup_period(self, call: BotInlineCall, value: int):
        if not value:
            self.set("period", "disabled")
            await call.answer(self.strings("never"), show_alert=True)
            await call.delete()
            return

        self.set("period", value * 60 * 60)
        self.set("last_backup", round(time.time()))

        await call.answer(self.strings("saved"), show_alert=True)
        await call.delete()

    @loader.command(
        ru_doc="<–≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –±—ç–∫–∞–ø–æ–≤",
        it_doc="<tempo in ore> - Imposta la frequenza dei backup",
        de_doc="<Stunden> - Setze die Backup-Frequenz",
        tr_doc="<saat cinsinden zaman> - Yedekleme periyodunu ayarla",
        uz_doc="<soatda vaqt> - E'lon tartibini belgilash",
        es_doc="<horas> - Establecer la frecuencia de copia de seguridad",
        kk_doc="<—Å–∞“ì–∞—Ç—Ç—ã —É–∞“õ—ã—Ç> - –†–µ–∑–µ—Ä–≤—Ç—ñ–∫ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä “õ–∞–π–¥–∞“ì—ã –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ –∂–∞—Å–∞–ª–∞–¥—ã",
    )
    async def set_backup_period(self, message: Message):
        """<time in hours> - Change backup frequency"""
        args = utils.get_args_raw(message)
        if not args or not args.isdigit() or int(args) not in range(200):
            await utils.answer(message, self.strings("invalid_args"))
            return

        if not int(args):
            self.set("period", "disabled")
            await utils.answer(message, f"<b>{self.strings('never')}</b>")
            return

        period = int(args) * 60 * 60
        self.set("period", period)
        self.set("last_backup", round(time.time()))
        await utils.answer(message, f"<b>{self.strings('saved')}</b>")

    @loader.loop(interval=1)
    async def handler(self):
        try:
            if self.get("period") == "disabled":
                raise loader.StopLoop

            if not self.get("period"):
                await asyncio.sleep(3)
                return

            if not self.get("last_backup"):
                self.set("last_backup", round(time.time()))
                await asyncio.sleep(self.get("period"))
                return

            await asyncio.sleep(
                self.get("last_backup") + self.get("period") - time.time()
            )

            backup = io.BytesIO(json.dumps(self._db).encode("utf-8"))
            backup.name = f'hikka-db-backup-{getattr(datetime, "datetime", datetime).now().strftime("%d-%m-%Y-%H-%M")}.json'

            await self._client.send_file(self._backup_channel, backup)
            self.set("last_backup", round(time.time()))
        except loader.StopLoop:
            raise
        except Exception:
            logger.exception("HikkaBackup failed")
            await asyncio.sleep(60)
